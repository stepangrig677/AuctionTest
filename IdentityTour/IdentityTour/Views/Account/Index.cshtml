@using IdentityTour.Models
@using Microsoft.AspNet.Identity
@model AccountIndexModel
@{
    ViewBag.Title = "Личный кабинет";
}

<div class="container">
    <div class="row">

        <!-- Правая часть -->
        <div class="col-md-4 col-lg-4">


            <div class="panel panel-default">
                <ul class="" id="yw1">
                    <li>
                        <span>Покупки</span>
                        <ul>
                            <li><a href="#" class="lots" id="current_lots"><span>Активные ставки</span> </a></li>
                            <li><a href="#"><span>Не выигранные</span> </a></li>
                            <li><a href="#" class="lots" id="old_lots"><span>История покупок</span> </a></li>
                        </ul>
                    </li>
                    <li>
                        <span>Продажи</span>
                        <ul>
                            <li><a href="#"><span>Активные лоты</span> </a></li>
                            <li><a href="#"><span>Непроданные лоты</span> </a></li>
                            <li><a href="#"><span>Планируемые лоты</span> </a></li>
                            <li><a href="#" class="lots" id="my_lots"><span>Проданные лоты</span> </a></li>
                        </ul>
                    </li>
                    <li>
                        <span>Избранное</span>
                        <ul>
                            <li><a href="#"><span>Избранные лоты</span> </a></li>
                        </ul>
                    </li>
                    <li><a href="#">Отзывы</a></li>
                </ul>

            </div>
        </div>

        <!-- Левая часть -->
        <div class="col-md-8 col-lg-8">
            <div class="row">
                <div class="col-lg-6">

                    <div id="imaginary_container">
                        <div class="input-group stylish-input-group">
                            <input type="text" class="form-control" placeholder="Search">
                            <span class="input-group-addon">
                                <button type="submit">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Сортировать
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <a class="dropdown-item" href="#">Начальная цена</a><br>
                            <a class="dropdown-item" href="#">Текущая цена</a><br>
                            <a class="dropdown-item" href="#">Время начала торгов</a><br>
                            <a class="dropdown-item" href="#">Время окончания торгов</a><br>
                        </div>
                    </div>

                </div>
                <div class="col-lg-3">
                    <div class="btn btn-success">Добавить</div>
                </div>
            </div>

            <div class="row">

                <div class="lots old_lots">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Название</th>
                                <th>Начало</th>
                                <th>Окончание</th>
                                <th>Стартовая цена</th>
                                <th>Итоговая цена</th>
                                <th>Победитель</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.OldLots.Count > 0)
                            {
                                foreach (var x in Model.OldLots)
                                {
                                    <tr>
                                        <td>@x.Name</td>
                                        <td>@x.StartTime</td>
                                        <td>@x.EndTime</td>
                                        <td>@x.EndPrice </td>
                                        <td>123</td>
                                        <td>Вася</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>


                <div class="lots current_lots">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Название</th>
                                <th>Начало</th>
                                <th>Окончание</th>
                                <th>Цена продажи</th>
                                <td>Текущая цена</td>
                                <td>Ставка</td>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.CurrentLots.Count > 0)
                            {
                                foreach (var x in Model.CurrentLots)
                                {
                                    <tr>
                                        <td>@x.Name</td>
                                        <td>@x.StartTime</td>
                                        <td>@x.EndTime</td>
                                        <td>@x.EndPrice </td>
                                        <td>123</td>
                                        <td><button class="btn btn-success sendprice"> Ставка</button></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>


                <div class="lots my_lots">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Название</th>
                                <th>Начало</th>
                                <th>Окончание</th>
                                <th>Цена продажи</th>
                                <th>Количество предложений</th>
                                <th>Покупатель</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.MyOwnLots.Count > 0)
                            {
                                foreach (var x in Model.MyOwnLots)
                                {
                                    <tr>
                                        <td>@x.Name</td>
                                        <td>@x.StartTime</td>
                                        <td>@x.EndTime</td>
                                        <td>@x.EndPrice </td>
                                        <td>123</td>
                                        <td>Вася</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>

        $('div.lots').css('display', 'none');
        $('div.current_lots').css('display', 'block');
        $('a.lots').click(function () {
            $('div.lots').css('display', 'none');
            $('div.' + this.id).css('display', 'block');
        })

        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.priceHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            $.connection.hub.start().done(function () {
                $('.sendprice').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(@(User.Identity.GetUserId()), this.val());
                    // Clear text box and reset focus for next comment.
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        /**/
    </script>
}
